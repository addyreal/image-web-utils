const main=document.getElementById("main"),_input=document.getElementById("input_label"),preview_container=document.getElementById("preview_container"),preview_canvas=document.getElementById("preview_canvas"),config_container=document.getElementById("config_container"),config_popup=document.getElementById("config_popup"),_c_preview_reset=document.getElementById("_c_preview_reset"),_c_preview_crop=document.getElementById("_c_preview_crop"),_c_preview_rotate=document.getElementById("_c_preview_rotate"),_c_preview_view=document.getElementById("_c_preview_view"),_c_preview_hide=document.getElementById("_c_preview_hide"),_c_config_view=document.getElementById("_c_config_view"),_c_config_hide=document.getElementById("_c_config_hide"),config_format=document.getElementById("config_format"),config_quality=document.getElementById("config_quality"),config_quality_visual=document.getElementById("config_quality_visual"),config_width=document.getElementById("config_width"),config_width_auto=document.getElementById("config_width_auto"),config_height=document.getElementById("config_height"),config_height_auto=document.getElementById("config_height_auto"),action_button=document.getElementById("action_button"),bottom_info=document.getElementById("bottom_info");var filename="",input_format=null,isCropping=!1,rotate=0,conversionConfig={format:null,quality:null,width:null,height:null},decodedImage={pixels:null,width:null,height:null,ratio:null,channels:null},previewWindow={scale:1,lastTouchesDist:0,lastX:0,lastY:0,offsetX:0,offsetY:0,isDragging:!1,isTouchZooming:!1},cropRect={x:0,y:0,w:0,h:0,lastX:0,lastY:0,offsetX:0,offsetY:0,vertex:0,dragging:!1};function resetConfig(){config_format.value=formatEnumToString(input_format),config_quality.value=0==input_format?100:90,config_quality_visual.textContent=config_quality.value,config_width.value=decodedImage.width,config_height.value=decodedImage.height}function resetPreviewWindow(){previewWindow={scale:1,lastTouchesDist:0,lastX:0,lastY:0,offsetX:0,offsetY:0,isDragging:!1,isTouchZooming:!1}}function resetCurrentCrop(e,t){cropRect={x:0,y:0,w:e-1,h:t-1,lastX:0,lastY:0,offsetX:0,offsetY:0,vertex:0,dragging:!1}}function applyConfig(){conversionConfig.format=formatStringToEnum(config_format.value),conversionConfig.quality=parseInt(config_quality.value,10),conversionConfig.width=parseInt(config_width.value,10),conversionConfig.height=parseInt(config_height.value,10)}const canvas=document.getElementById("canvas"),context=canvas.getContext("2d");context.imageSmoothingEnabled=!1;const vCanvas=document.createElement("canvas"),vContext=vCanvas.getContext("2d");vContext.imageSmoothingEnabled=!1;const CONST_CROPTHICKNESS=1,CONST_CROPSQUAREAREA=16,CONST_ZOOMFACTOR=1.1,CONST_MOBILEZOOMFACTOR=1.05;function draw(){context.setTransform(1,0,0,1,0,0),context.clearRect(0,0,canvas.width,canvas.height),context.imageSmoothingEnabled=!1,context.setTransform(previewWindow.scale,0,0,previewWindow.scale,previewWindow.offsetX,previewWindow.offsetY),0!=rotate&&0==isCropping&&(context.translate(vCanvas.width/2,vCanvas.height/2),context.rotate(rotate*Math.PI/2),context.translate(-1*vCanvas.width/2,-1*vCanvas.height/2)),context.drawImage(vCanvas,0,0);const e=Math.round(cropRect.x),t=Math.round(cropRect.y),o=Math.round(cropRect.w),i=Math.round(cropRect.h);1==isCropping&&(context.fillStyle="red",context.fillRect(e+1-16,t+1-16,16,16),context.fillRect(e+1-16,t+i,16,16),context.fillRect(e+o,t+1-16,16,16),context.fillRect(e+o,t+i,16,16)),context.save(),context.fillStyle="rgba(0, 0, 0, 0.25)",context.fillRect(e,t,o,i),context.restore(),context.strokeStyle="rgba(255, 0, 0 , 0.6)",context.lineWidth=1,context.strokeRect(e+.5,t+.5,o,i)}function press(e,t){const o=canvas.getBoundingClientRect();previewWindow.isDragging=!0,previewWindow.isTouchZooming=!1,previewWindow.lastX=e-o.left,previewWindow.lastY=t-o.top}function move(e,t){if(!previewWindow.isDragging||previewWindow.isTouchZooming)return;const o=canvas.getBoundingClientRect(),i=e-o.left-previewWindow.lastX,n=t-o.top-previewWindow.lastY;previewWindow.offsetX+=i,previewWindow.offsetY+=n,previewWindow.lastX=e-o.left,previewWindow.lastY=t-o.top,draw()}function zoom(e){const t=canvas.getBoundingClientRect(),o=e.clientX-t.left,i=e.clientY-t.top,n=e.deltaY<=0?1.1:1/1.1,c=(o-previewWindow.offsetX)/previewWindow.scale,r=(i-previewWindow.offsetY)/previewWindow.scale;previewWindow.scale*=n,previewWindow.offsetX=o-c*previewWindow.scale,previewWindow.offsetY=i-r*previewWindow.scale,draw()}function end(){previewWindow.isDragging=!1,cropRect.dragging=!1,canvas.classList.remove("grabbing")}function getTouchesDist(e,t){const o=e.clientX-t.clientX,i=e.clientY-t.clientY;return Math.hypot(o,i)}function getTouchesX(e,t){return(e.clientX+t.clientX)/2}function getTouchesY(e,t){return(e.clientY+t.clientY)/2}function mobileStartZoom(e,t){cropRect.dragging=!1,previewWindow.isDragging=!1,previewWindow.isTouchZooming=!0,previewWindow.lastTouchesDist=getTouchesDist(e,t)}function mobileZoom(e,t){const o=canvas.getBoundingClientRect(),i=getTouchesX(e,t)-o.left,n=getTouchesY(e,t)-o.top,c=getTouchesDist(e,t)-previewWindow.lastTouchesDist<=0?1/1.05:1.05,r=(i-previewWindow.offsetX)/previewWindow.scale,a=(n-previewWindow.offsetY)/previewWindow.scale;previewWindow.scale*=c,previewWindow.offsetX=i-r*previewWindow.scale,previewWindow.offsetY=n-a*previewWindow.scale,previewWindow.lastTouchesDist=getTouchesDist(e,t),draw()}function mobileEnd(){previewWindow.isDragging=!1,previewWindow.isTouchZooming=!1}function clampedArrayRGBtoRGBA(e,t,o){var i=new Uint8ClampedArray(t*o*4);for(let t=0,o=0;t<e.length;t+=3,o+=4)i[o]=e[t],i[o+1]=e[t+1],i[o+2]=e[t+2],i[o+3]=255;return i}function clampedArrayRGBA(e,t,o,i){return 3==i?clampedArrayRGBtoRGBA(e,t,o):4==i?new Uint8ClampedArray(e):void 0}function bytesToImageFormat(e){return 137===e[0]&&80===e[1]&&78===e[2]&&71===e[3]?0:255===e[0]&&216===e[1]?1:82===e[0]&&73===e[1]&&70===e[2]&&70===e[3]&&87===e[8]&&69===e[9]&&66===e[10]&&80===e[11]?2:102===e[4]&&116===e[5]&&121===e[6]&&112===e[7]&&104===e[8]&&101===e[9]&&105===e[10]&&99===e[11]||102===e[4]&&116===e[5]&&121===e[6]&&112===e[7]&&104===e[20]&&101===e[21]&&105===e[22]&&99===e[23]?3:-1}function formatEnumToString(e){return 0==e?"png":1==e?"jpeg":2==e?"webp":3==e?"heic":void 0}function formatStringToEnum(e){return"png"==e?0:"jpeg"==e?1:"webp"==e?2:"heic"==e?3:void 0}function hideWhenCropping(){_c_preview_hide.classList.toggle("notallowed"),_c_preview_rotate.classList.toggle("notallowed"),_c_preview_reset.classList.toggle("notallowed")}function ConvertCall(){if(0==decodedImage.channels)return;if(0==Math.round(cropRect.w)||0==Math.round(cropRect.h))return void printConsole("Aborting cropping the entire image.\n");const e=decodedImage.pixels.length,t=Module._malloc(e);Module.HEAPU8.set(decodedImage.pixels,t);const o=Module._malloc(4),i=Module._malloc(4),n=Module._malloc(4),c=Module._malloc(4),r=Math.round(cropRect.x),a=Math.round(cropRect.y),s=Math.round(cropRect.w),l=Math.round(cropRect.h);if(encodeOK=Module._Encode(t,o,i,n,c,decodedImage.width,decodedImage.height,decodedImage.channels,conversionConfig.format,conversionConfig.quality,conversionConfig.width,conversionConfig.height,rotate,r,a,s,l),0==encodeOK)return printConsole("Encode successfully failed.\n"),Module._free(t),Module._free(o),Module._free(i),Module._free(n),void Module._free(c);Module._free(t);const d=Module.getValue(o,"*"),p=Module.getValue(i,"i32"),w=Module.getValue(n,"i32"),g=Module.getValue(c,"i32");if(Module._free(o),Module._free(i),Module._free(n),Module._free(c),0!=p&&NaN!=p){const e=new Uint8Array(Module.HEAPU8.slice(d,d+p));e.set(Module.HEAPU8.subarray(d,d+p));const t=new Blob([e],{type:"image/"+formatEnumToString(conversionConfig.format)}),o=document.createElement("a");o.href=URL.createObjectURL(t),o.download=filename+"-"+w.toString()+"x"+g.toString()+"."+formatEnumToString(conversionConfig.format),o.click()}Module._freeEncodeMalloc(d,conversionConfig.format)}canvas.addEventListener("wheel",(e=>{e.preventDefault(),zoom(e)})),canvas.addEventListener("mousedown",(e=>{canvas.classList.add("grabbing");const t=canvas.getBoundingClientRect(),o=e.clientX-t.left,i=e.clientY-t.top,n=cropRect.x*previewWindow.scale+previewWindow.offsetX,c=cropRect.y*previewWindow.scale+previewWindow.offsetY,r=cropRect.w*previewWindow.scale,a=cropRect.h*previewWindow.scale;1==isCropping&&o>=n-previewWindow.scale-10&&o<=n+previewWindow.scale+10&&i>=c-previewWindow.scale-10&&i<=c+previewWindow.scale+10?(cropRect.lastX=(o-previewWindow.offsetX)/previewWindow.scale,cropRect.lastY=(i-previewWindow.offsetY)/previewWindow.scale,cropRect.offsetX=0,cropRect.offsetY=0,cropRect.vertex=0,cropRect.dragging=!0):1==isCropping&&o>=n+r-previewWindow.scale-10&&o<=n+r+previewWindow.scale+10&&i>=c-previewWindow.scale-10&&i<=c+previewWindow.scale+10?(cropRect.lastX=(o-previewWindow.offsetX)/previewWindow.scale,cropRect.lastY=(i-previewWindow.offsetY)/previewWindow.scale,cropRect.offsetX=0,cropRect.offsetY=0,cropRect.vertex=1,cropRect.dragging=!0):1==isCropping&&o>=n-previewWindow.scale-10&&o<=n+previewWindow.scale+10&&i>=c+a-previewWindow.scale-10&&i<=c+a+previewWindow.scale+10?(cropRect.lastX=(o-previewWindow.offsetX)/previewWindow.scale,cropRect.lastY=(i-previewWindow.offsetY)/previewWindow.scale,cropRect.offsetX=0,cropRect.offsetY=0,cropRect.vertex=2,cropRect.dragging=!0):1==isCropping&&o>=n+r-previewWindow.scale-10&&o<=n+r+previewWindow.scale+10&&i>=c+a-previewWindow.scale-10&&i<=c+a+previewWindow.scale+10?(cropRect.lastX=(o-previewWindow.offsetX)/previewWindow.scale,cropRect.lastY=(i-previewWindow.offsetY)/previewWindow.scale,cropRect.offsetX=0,cropRect.offsetY=0,cropRect.vertex=3,cropRect.dragging=!0):press(e.clientX,e.clientY)})),canvas.addEventListener("mousemove",(e=>{e.preventDefault();const t=canvas.getBoundingClientRect(),o=e.clientX-t.left,i=e.clientY-t.top;if(1==cropRect.dragging){const e=(o-cropRect.offsetX-previewWindow.offsetX)/previewWindow.scale,t=(i-cropRect.offsetY-previewWindow.offsetY)/previewWindow.scale;let n=e-cropRect.lastX,c=t-cropRect.lastY;switch(cropRect.vertex){case 0:cropRect.x+=n,cropRect.y+=c,cropRect.w-=n,cropRect.h-=c;break;case 1:cropRect.y+=c,cropRect.w+=n,cropRect.h-=c;break;case 2:cropRect.x+=n,cropRect.w-=n,cropRect.h+=c;break;case 3:cropRect.w+=n,cropRect.h+=c}cropRect.lastX=e,cropRect.lastY=t,draw()}else move(e.clientX,e.clientY)})),canvas.addEventListener("mouseup",(()=>{end()})),canvas.addEventListener("mouseleave",(()=>{end()})),canvas.addEventListener("touchstart",(function(e){if(e.preventDefault(),1==e.touches.length){const t=canvas.getBoundingClientRect(),o=e.touches[0].clientX-t.left,i=e.touches[0].clientY-t.top,n=cropRect.x*previewWindow.scale+previewWindow.offsetX,c=cropRect.y*previewWindow.scale+previewWindow.offsetY,r=cropRect.w*previewWindow.scale,a=cropRect.h*previewWindow.scale;1==isCropping&&o>=n-previewWindow.scale-20&&o<=n+previewWindow.scale+20&&i>=c-previewWindow.scale-20&&i<=c+previewWindow.scale+20?(cropRect.lastX=(o-previewWindow.offsetX)/previewWindow.scale,cropRect.lastY=(i-previewWindow.offsetY)/previewWindow.scale,cropRect.offsetX=0,cropRect.offsetY=0,cropRect.vertex=0,cropRect.dragging=!0):1==isCropping&&o>=n+r-previewWindow.scale-20&&o<=n+r+previewWindow.scale+20&&i>=c-previewWindow.scale-20&&i<=c+previewWindow.scale+20?(cropRect.lastX=(o-previewWindow.offsetX)/previewWindow.scale,cropRect.lastY=(i-previewWindow.offsetY)/previewWindow.scale,cropRect.offsetX=0,cropRect.offsetY=0,cropRect.vertex=1,cropRect.dragging=!0):1==isCropping&&o>=n-previewWindow.scale-20&&o<=n+previewWindow.scale+20&&i>=c+a-previewWindow.scale-20&&i<=c+a+previewWindow.scale+20?(cropRect.lastX=(o-previewWindow.offsetX)/previewWindow.scale,cropRect.lastY=(i-previewWindow.offsetY)/previewWindow.scale,cropRect.offsetX=0,cropRect.offsetY=0,cropRect.vertex=2,cropRect.dragging=!0):1==isCropping&&o>=n+r-previewWindow.scale-20&&o<=n+r+previewWindow.scale+20&&i>=c+a-previewWindow.scale-20&&i<=c+a+previewWindow.scale+20?(cropRect.lastX=(o-previewWindow.offsetX)/previewWindow.scale,cropRect.lastY=(i-previewWindow.offsetY)/previewWindow.scale,cropRect.offsetX=0,cropRect.offsetY=0,cropRect.vertex=3,cropRect.dragging=!0):press(e.touches[0].clientX,e.touches[0].clientY)}else 2==e.touches.length&&mobileStartZoom(e.touches[0],e.touches[1])}),{passive:!1}),canvas.addEventListener("touchmove",(function(e){if(e.preventDefault(),1==e.touches.length)if(1==cropRect.dragging){const t=canvas.getBoundingClientRect(),o=e.touches[0].clientX-t.left,i=e.touches[0].clientY-t.top,n=(o-cropRect.offsetX-previewWindow.offsetX)/previewWindow.scale,c=(i-cropRect.offsetY-previewWindow.offsetY)/previewWindow.scale;let r=n-cropRect.lastX,a=c-cropRect.lastY;switch(cropRect.vertex){case 0:cropRect.x+=r,cropRect.y+=a,cropRect.w-=r,cropRect.h-=a;break;case 1:cropRect.y+=a,cropRect.w+=r,cropRect.h-=a;break;case 2:cropRect.x+=r,cropRect.w-=r,cropRect.h+=a;break;case 3:cropRect.w+=r,cropRect.h+=a}cropRect.lastX=n,cropRect.lastY=c,draw()}else move(e.touches[0].clientX,e.touches[0].clientY);else 2==e.touches.length&&mobileZoom(e.touches[0],e.touches[1])}),{passive:!1}),canvas.addEventListener("touchend",(()=>{mobileEnd()}),{passive:!1}),canvas.addEventListener("touchcancel",(()=>{mobileEnd()}),{passive:!1}),_c_preview_view.addEventListener("click",(function(){preview_container.classList.toggle("hidden"),main.classList.toggle("blurred"),bottom_info.classList.toggle("blurred")})),_c_preview_hide.addEventListener("click",(function(){1!=isCropping&&(preview_container.classList.toggle("hidden"),main.classList.toggle("blurred"),bottom_info.classList.toggle("blurred"))})),_c_preview_reset.addEventListener("click",(function(){1!=isCropping&&(rotate=0,resetCurrentCrop(decodedImage.width,decodedImage.height),draw())})),_c_preview_crop.addEventListener("click",(function(){isCropping=1!=isCropping,_c_preview_crop.classList.toggle("bg-gray"),canvas.classList.toggle("crosshair"),hideWhenCropping(),draw()})),_c_preview_rotate.addEventListener("click",(function(){1!=isCropping&&(rotate=(rotate+1)%4,draw())})),_c_config_view.addEventListener("click",(function(){config_popup.classList.toggle("hidden"),main.classList.toggle("blurred"),bottom_info.classList.toggle("blurred")})),_c_config_reset.addEventListener("click",(function(){resetConfig()})),_c_config_hide.addEventListener("click",(function(){config_popup.classList.toggle("hidden"),main.classList.toggle("blurred"),bottom_info.classList.toggle("blurred"),applyConfig()})),config_quality.addEventListener("input",(()=>{config_quality_visual.textContent=config_quality.value})),config_width_auto.addEventListener("click",(()=>{config_width.value=Math.floor(parseFloat(config_height.value)*decodedImage.ratio)})),config_height_auto.addEventListener("click",(()=>{config_height.value=Math.floor(parseFloat(config_width.value)/decodedImage.ratio)})),_input.addEventListener("change",(function(e){config_container.classList.add("hidden"),resetConsole(),resetPreviewWindow(),rotate=0,canvas.classList.remove("grabbing");const t=e.target.files[0];if(!t)return void printConsole("Error: Received 0 files.\n");filename=t.name.replace(/\.(png|jpeg|jpg|webp|heic)$/i,"");const o=new FileReader;o.onload=function(){const e=o.result,t=new Uint8Array(e),i=Module._malloc(t.length);Module.HEAPU8.set(t,i),input_format=bytesToImageFormat(t);const n=t.length,c=Module._malloc(4),r=Module._malloc(4),a=Module._malloc(4),s=Module._malloc(4);if(0==Module._Decode(i,n,input_format,c,r,a,s)){printConsole("Decode successfully failed");const e=Module.getValue(c,"*");return Module._freeDecodeMalloc(e,input_format),Module._free(c),Module._free(s),Module._free(a),Module._free(r),void Module._free(i)}const l=Module.getValue(c,"*"),d=Module.getValue(r,"i32"),p=Module.getValue(a,"i32"),w=Module.getValue(s,"i32");Module._free(c),Module._free(s),Module._free(a),Module._free(r),Module._free(i),resetCurrentCrop(d,p),config_format.value=formatEnumToString(input_format),config_quality.value=0==input_format?100:90,config_quality_visual.textContent=config_quality.value,config_width.value=d,config_height.value=p,conversionConfig.format=input_format,conversionConfig.quality=0==input_format?100:90,conversionConfig.width=d,conversionConfig.height=p,decodedImage.pixels=new Uint8Array(d*p*w),decodedImage.pixels.set(Module.HEAPU8.subarray(l,l+d*p*w)),decodedImage.width=d,decodedImage.height=p,decodedImage.ratio=d/p,decodedImage.channels=w,Module._freeDecodeMalloc(l,input_format);const g=clampedArrayRGBA(decodedImage.pixels,d,p,w),f=new ImageData(g,d,p);canvas.width=d>=800?800:d,canvas.height=p>=800?800:p,vCanvas.width=d,vCanvas.height=p,vContext.putImageData(f,0,0),draw(),config_container.classList.remove("hidden")},o.readAsArrayBuffer(t)})),action_button.addEventListener("click",(function(){ConvertCall()}));